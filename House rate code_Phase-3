# Uploading the CSV file
from google.colab import files
data = files.upload()

# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
df = pd.read_csv('india_housing_prices.csv')

# Display the first few rows
print("First 5 rows of the dataset:")
print(df.head())

# Basic information
print("\nDataset Info:")
df.info()

# Check for missing values
print("\nMissing values in dataset:")
print(df.isnull().sum())

# Fill or drop missing values
df = df.dropna()  # or you can use df.fillna(method='ffill') if appropriate

# Exploratory Data Analysis
plt.figure(figsize=(10, 6))
sns.histplot(df['price'], kde=True)
plt.title('Distribution of House Prices')
plt.xlabel('Price')
plt.ylabel('Frequency')
plt.show()

# Correlation heatmap
plt.figure(figsize=(12, 8))
sns.heatmap(df.corr(), annot=True, fmt=".2f", cmap='coolwarm')
plt.title('Feature Correlation')
plt.show()

# Define features and target
X = df.drop(['price'], axis=1)
y = df['price']

# Convert categorical variables if any
X = pd.get_dummies(X, drop_first=True)

# Feature scaling
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Model training - Linear Regression
lr = LinearRegression()
lr.fit(X_train, y_train)

# Model training - Random Forest
rf = RandomForestRegressor(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

# Predictions and Evaluation
models = {'Linear Regression': lr, 'Random Forest': rf}

for name, model in models.items():
    y_pred = model.predict(X_test)
    rmse = np.sqrt(mean_squared_error(y_test, y_pred))
    r2 = r2_score(y_test, y_pred)
    print(f"\n{name} Performance:")
    print(f"RMSE: {rmse:.2f}")
    print(f"R^2 Score: {r2:.2f}")
                                
